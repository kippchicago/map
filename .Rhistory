installed.packages(c("tidyverse"))
installed.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("googlCloudStorageR", "DT", "shinydashboar", "shinydashboard", "devtools"))
devtools::install_github("kippchicago/kippcolors")
library(googleCloudStorageR)
install.packages(c("googleCloudStorageR"))
gcs_global_bucket("idea_attendance")
library(googleCloudStorageR)
gcs_global_bucket("idea_map")
gcs_load(file = "map.rda")
gcs_load(file = "map.rda")
library(shiny)
library(shinydashboard)
library(kippcolors)
use_kipp_chicago_css(color = "green")
runApp()
runApp()
runApp()
devtools::install_github('almartin82/mapvizieR')
runApp()
runApp()
devtools::install_github('andrewsali/shinycssloaders')
library(shinycssloaders)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
map_sum_15$growth_window
View("map_sum_15")
View(map_sum_15)
View(student_enrollment_tested)
runApp()
runApp()
map_sum_15
map_sum_15 %>%
mutate(School = stringr::str_extract(
end_schoolname,
"Ascend|Create|Bloom|One"
)#,
#nwea_norms = norm_in
) %>%
filter(
School %in% input$school,
end_grade %in% c(input$grades[1]:input$grades[2]),
cohort_year >= 2014,
end_map_year_academic >= 2011,
measurementscale %in% input$subject
)
map_sum_15 %>%
mutate(School = stringr::str_extract(
end_schoolname,
"Ascend|Create|Bloom|One"
)#,
#nwea_norms = norm_in
) %>%
filter(
School %in% input$school,
end_grade %in% c(2:8),
cohort_year >= 2014,
end_map_year_academic >= 2011,
measurementscale %in% input$subject
)
map_sum_15 %>%
mutate(School = stringr::str_extract(
end_schoolname,
"Ascend|Create|Bloom|One"
)#,
#nwea_norms = norm_in
) %>%
filter(
#School %in% input$school,
end_grade %in% c(2:8),
cohort_year >= 2014,
end_map_year_academic >= 2011,
measurementscale %in% input$subject
)
map_sum_15 %>%
mutate(School = stringr::str_extract(
end_schoolname,
"Ascend|Create|Bloom|One"
)#,
#nwea_norms = norm_in
) %>%
filter(
#School %in% input$school,
#end_grade %in% c(2:8),
cohort_year >= 2014,
end_map_year_academic >= 2011,
#measurementscale %in% input$subject
)
map_sum_15$growth_window
gcs_global_bucket("idea_map")
map_records <- reactivePoll(3600000,
session,
checkFunc = function() {
x <- gcs_list_objects()
x$updated
},
valueFunc = function() {
gcs_load(file = "map.rda")
}
)
gcs_load(file = "map.rda")
map_records <- reactivePoll(3600000,
session,
checkFunc = function() {
x <- gcs_list_objects()
x$updated
},
valueFunc = function() {
gcs_load(file = "map.rda")
}
#gcs_load(file = "map.rda")
map_records <- reactivePoll(3600000,
session,
checkFunc = function() {
x <- gcs_list_objects()
x$updated
},
valueFunc = function() {
gcs_load(file = "map.rda")
}
)
map_records <- reactivePoll(3600000,
session,
checkFunc = function() {
x <- gcs_list_objects()
x$updated
},
valueFunc = function() {
gcs_load(file = "map.rda")
}
)
gcs_load(file = "map.rda")
map_records <- reactivePoll(3600000,
session,
checkFunc = function() {
x <- gcs_list_objects()
x$updated
},
valueFunc = function() {
gcs_load(file = "map.rda")
}
)
gcs_load(file = "map.rda")
map_records <- reactivePoll(3600000,
session,
checkFunc = function() {
x <- gcs_list_objects()
x$updated
},
valueFunc = function() {
gcs_load(file = "map.rda")
}
)
runApp()
runApp()
shinycssloaders
library(shinycssloaders)
runApp()
runApp()
devtools::install_github("andrewsali/shinycssloaders")
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
devtools::install_github("rstudio/shinydashboard")
shiny::runApp()
runApp()
shiny::runApp()
runApp()
library(DT)
runApp()
runApp()
runApp()
View(student_enrollment_tested)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(googleCloudStorageR)
gcs_global_bucket("idea_map")
gcs_load(file = "map.rda")
runApp()
runApp()
x <- gcs_list_objects()
x <- gcs_list_objects()
x$updated
runApp()
runApp()
runApp()
runApp()
runApp()
?reactivePoll
runApp()
runApp()
runApp()
runApp()
install.packages(c("DT", "googleCloudStorageR", "shiny", "shinycssloaders", "shinydashboard"))
?ggplot2::geom_abline
?unique
install.packages(c("dplyr", "DT", "googleCloudStorageR", "magrittr", "shiny", "shinycssloaders", "shinydashboard", "stringr"))
shiny::runApp()
install.packages('devtools')
devtools::install_github('kippchicago/kippcolors')
devtools::install_github('almartin82/mapvizieR')
runApp()
shiny::runApp()
